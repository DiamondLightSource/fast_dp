trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

stages:
- stage: static
  displayName: Static Analysis
  jobs:
  - job: checks
    displayName: static code analysis
    pool:
      vmImage: ubuntu-latest
    steps:
      # Use Python >=3.7 for syntax validation
      - task: UsePythonVersion@0
        displayName: Set up python
        inputs:
          versionSpec: 3.7

      - bash: |
          python .azure-pipelines/syntax-validation.py
        displayName: Syntax validation

#     - bash: |
#         pip install flake8
#         python .azure-pipelines/flake8-validation.py
#       displayName: Flake8 validation

- stage: build
  displayName: Build
  dependsOn:
  jobs:
  - job: build
    displayName: build package
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: UsePythonVersion@0
        displayName: Set up python
        inputs:
          versionSpec: 3.9

      - bash: python -m pip install -r requirements_dev.txt
        displayName: Install dependencies

      - bash: |
          set -e
          python setup.py sdist bdist_wheel
          cp requirements*.txt dist
          git archive HEAD | gzip > dist/repo-source.tar.gz
          ls -la dist
        displayName: Build python package

      - task: PublishBuildArtifacts@1
        displayName: Store artifact
        inputs:
          pathToPublish: dist/
          artifactName: package

      - bash: python setup.py checkdocs
        displayName: Check package description

- stage: tests
  displayName: Run unit tests
  dependsOn:
  - static
  - build
  jobs:
  - job: linux
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        python36:
          PYTHON_VERSION: 3.6
        python37:
          PYTHON_VERSION: 3.7
        python38:
          PYTHON_VERSION: 3.8
#       python39:
#         PYTHON_VERSION: 3.9
    steps:
    - template: conda-forge-build.yml

  - job: macOS
    pool:
      vmImage: macOS-latest
    strategy:
      matrix:
        python36:
          PYTHON_VERSION: 3.6
        python37:
          PYTHON_VERSION: 3.7
        python38:
          PYTHON_VERSION: 3.8
#       python39:
#         PYTHON_VERSION: 3.9
    steps:
    - template: conda-forge-build.yml

  - job: windows
    pool:
      vmImage: windows-latest
    strategy:
      matrix:
        python36:
          PYTHON_VERSION: 3.6
#       python37:
#         PYTHON_VERSION: 3.7
#       python38:
#         PYTHON_VERSION: 3.8
#       python39:
#         PYTHON_VERSION: 3.9
    steps:
    - template: conda-forge-build.yml

- stage: deploy
  displayName: Publish release
  dependsOn:
  - tests
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  jobs:
  - job: pypi
    displayName: Publish pypi release
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: UsePythonVersion@0
        displayName: Set up python
        inputs:
          versionSpec: 3.9

      - bash: |
          python -m pip install --upgrade pip
          python -m pip install wheel twine
        displayName: Install dependencies

      - bash: |
          python setup.py sdist bdist_wheel
          ls -la dist
        displayName: Build python package

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: dist/
          artifactName: python-release

      - task: TwineAuthenticate@1
        displayName: Set up credentials
        inputs:
          pythonUploadServiceConnection: pypi-fastdp

      - bash: |
          python -m twine upload -r pypi-fastdp --config-file $(PYPIRC_PATH) dist/*.tar.gz dist/*.whl
        displayName: Publish package
