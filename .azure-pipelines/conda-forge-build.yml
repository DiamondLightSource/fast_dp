steps:
- checkout: none

- task: DownloadBuildArtifacts@0
  displayName: Get pre-built package
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'package'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: ExtractFiles@1
  displayName: Checkout sources
  inputs:
    archiveFilePatterns: "$(System.ArtifactsDirectory)/package/repo-source.tar.gz"
    destinationFolder: "$(Pipeline.Workspace)/src"

- bash: echo "##vso[task.prependpath]$CONDA/bin"
  displayName: Set up conda (Linux)
  condition: eq(variables['agent.os'], 'Linux')

# On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory
# We need to take ownership if we want to update conda or install packages globally
- bash: |
    set -eu
    echo "##vso[task.prependpath]$CONDA/bin"
    sudo chown -R $USER $CONDA
  displayName: Set up conda (MacOS)
  condition: eq(variables['agent.os'], 'Darwin')

- powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
  displayName: Set up conda (Windows)
  condition: eq(variables['agent.os'], 'Windows_NT')

- script: conda create -y -n fastdp -c conda-forge python=$(PYTHON_VERSION) cctbx-base pip
  displayName: Set up Python $(PYTHON_VERSION)

- bash: |
    set -eu
    source activate fastdp
    pip install -r "$(System.ArtifactsDirectory)/package/requirements_dev.txt"
    pip install --no-index --find-links="$(System.ArtifactsDirectory)/package" fast_dp
    pip install pytest-azurepipelines
  displayName: Install package (Linux/MacOS)
  condition: ne(variables['agent.os'], 'Windows_NT')

- script: |
    call activate fastdp
    python -c "import sys;print(''.join(l for l in sys.stdin if l.startswith('pip')))" < "$(System.ArtifactsDirectory)/package/requirements_dev.txt" > "$(System.ArtifactsDirectory)/package/pip.txt"
    python -c "import sys;print(''.join(l for l in sys.stdin if l.startswith('wheel')))" < "$(System.ArtifactsDirectory)/package/requirements_dev.txt" > "$(System.ArtifactsDirectory)/package/wheel.txt"
    pip install -r "$(System.ArtifactsDirectory)/package/pip.txt"
    pip install -r "$(System.ArtifactsDirectory)/package/wheel.txt"
    pip install -r "$(System.ArtifactsDirectory)/package/requirements_dev.txt"
    pip install --no-index --find-links="$(System.ArtifactsDirectory)/package" fast_dp
    pip install pytest-azurepipelines
  displayName: Install package (Windows)
  condition: eq(variables['agent.os'], 'Windows_NT')

- bash: |
    set -eu
    source activate fastdp
    PYTHONDEVMODE=1 pytest -ra src --cov=fast_dp --cov-report=html --cov-report=xml --cov-branch
  displayName: Run tests (Linux/MacOS)
  condition: ne(variables['agent.os'], 'Windows_NT')
  workingDirectory: $(Pipeline.Workspace)

- script: |
    call activate fastdp
    set PYTHONDEVMODE=1
    pytest -ra src --cov=fast_dp --cov-report=html --cov-report=xml --cov-branch
  displayName: Run tests (Windows)
  condition: eq(variables['agent.os'], 'Windows_NT')
  workingDirectory: $(Pipeline.Workspace)

- bash: |
    find .
  displayName: List all files
  condition: ne(variables['agent.os'], 'Windows_NT')
  workingDirectory: $(Pipeline.Workspace)

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '$(Pipeline.Workspace)/test-*.xml'
    testRunTitle: 'Publish test results for Python $(PYTHON_VERSION)'

- bash: bash <(curl -s https://codecov.io/bash) -n "Python $(PYTHON_VERSION) $(Agent.OS)"
  displayName: 'Publish coverage stats'
  continueOnError: True
  workingDirectory: $(Pipeline.Workspace)
  timeoutInMinutes: 2
