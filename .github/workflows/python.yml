name: Build and Test

on: [push]

# Required for micromamba activation
defaults:
  run:
    shell: bash -l {0}

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Lint with Ruff
        run: |
          pip install ruff
          ruff --output-format=github --target-version=py39 .
        continue-on-error: true

  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest build
      - name: Build distribution
        run: |
          python -m build
          pip install dist/*.whl
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*

  Test:
    needs: Build
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
        - os: windows-latest
          python-version: "3.10"
        - os: windows-latest
          python-version: "3.11"
        - os: macos-latest
          python-version: "3.10"
        - os: macos-latest
          python-version: "3.11"
    runs-on: ${{ matrix.os }}
    # runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4.1.7
        with:
          name: artifact
          path: dist
      - name: Set up Python ${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: ci
          create-args: >-
            conda-forge::cctbx-base
            conda-forge::python=${{ matrix.python-version }}
          init-shell: >-
            bash
            powershell
          cache-environment: true
          post-cleanup: "all"
      - name: Install dependencies
        run: |
          pip install -r requirements_dev.txt pytest dist/*.whl
      - name: Test with pytest
        run: |
          pytest test

  pypi-publish:
    name: Upload release to PyPI
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/project/fast-dp/
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4.1.7
        with:
          name: artifact
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@b7f401de30cb6434a1e19f805ff006643653240e
